@model HealthcareApplications.Models.Patient
@using Microsoft.AspNetCore.Http
@using HealthcareApplications.Controllers
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Patient</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfBirth)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Physician.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Physician.Name)
        </dd>
    </dl>
</div>
<h4>Prescriptions</h4>
@if (HttpContextAccessor.HttpContext.Session.GetString(HomeController.Role).ToString() == "Physician")
{
    <div>
        <a asp-controller="Prescriptions" asp-action="Create" asp-route-id="@Model.Id">Create Prescription</a>
    </div>
}
<br />
@await Component.InvokeAsync("PrescriptionsList", new { searchPatientId = Model.Id, searchPrescription = "" })
<div>
    <a asp-controller="Home" asp-action="UserDashBoard">Back to List</a>
</div>
