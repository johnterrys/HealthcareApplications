@model HealthcareApplications.Models.PrescriptionDetailsViewModel


@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
<div>
    <h4>Prescription</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Prescription.StartDate)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.Prescription.StartDate)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.PatientName)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.PatientName)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.PhysicianName)
        </dt>
        <dd class="col-sm-8">
            @Html.DisplayFor(model => model.PhysicianName)
        </dd>
    </dl>
</div>
<h4>Drugs</h4>
<div class="form-group">
    <a asp-controller="PrescriptionDrugs" asp-action="Create" asp-route-id="@Model.PrescriptionId">Add Drug</a>
</div>
@await Component.InvokeAsync("PrescriptionsPrescriptionDrugsList", new { Model.PrescriptionId, SearchPrescriptionDrugs = "" })
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Prescriptions" asp-action="FinishPrescription" asp-route-id="@Model.PrescriptionId">
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-controller="Prescriptions" asp-action="CancelPrescription" asp-route-id="@Model.Prescription.Id">Back to Patient</a>
</div>

